
services:
  node_app:
    build: .
    # image: node_pgsql-node_app:latest
    volumes:
      - /etc/ssl/certs/si-10.cen-champagne-ardenne.org:/etc/ssl/certs/si-10.cen-champagne-ardenne.org:ro
      - /mnt/storage_data/app/:/mnt/storage_data/app/
    ports:
      - "8889:8887"
    networks:
      - monitoring
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring
    restart: unless-stopped

  # Service de surveillance automatique CENCA
  surveillance:
    build: 
      context: .
      dockerfile: surveillance/Dockerfile
    container_name: cenca_surveillance
    environment:
      - NODE_ENV=production
      - MONITORING_API_URL=${MONITORING_API_URL}
      - MONITORING_USERNAME=${MONITORING_USERNAME:-ttoto}
      - MONITORING_PASSWORD=${MONITORING_PASSWORD:-password}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - MONITORING_INTERVAL=${MONITORING_INTERVAL:-300000}
      - MONITORING_TIMEOUT=${MONITORING_TIMEOUT:-15000}
    depends_on:
      - node_app
    networks:
      - monitoring
    restart: unless-stopped
    volumes:
      - ./routes:/app/routes:ro
      - ./surveillance/routes-config.json:/app/surveillance/routes-config.json
      - ./.env:/app/.env:ro

networks:
  monitoring:
    driver: bridge